FrameServer
//		JDialog jDialog = new JDialog();
//		jDialog.setLocation((int) dimension.getWidth() / 4,
//				(int) dimension.getHeight() / 4);
//		JLabel showIP = new JLabel(IP + "已接入" );
//		jDialog.getContentPane().add(showIP);
//		jDialog.setVisible(true);
//		jDialog.pack();


//				InputStream is = socket.getInputStream();
//				byte[] byteArray = new byte[1024];
//				while ((length = is.read(byteArray, 0, byteArray.length)) > 0) {
//					// 因为数组中有空的数据所以需要trim做处理
//					if ("text".equals(new String(byteArray).trim().toString())) {
////						System.out.println("文本数据");
//						
////						parseString(is);
//					}
//				}


FrameClient

//				FileOutputStream fis = null;
//				String string = "hello world";
//				String type = "text";
//				os.write(type.getBytes());


//					socket.setSoTimeout(2000);

//					fis = new FileOutputStream("screenshot.jpg");
//					fos = new FileOutputStream(new File("./cc.jpg"));
//	                inputByte = new byte[1024];



//			                    fis.write(data, 0, length);
//			                    fis.flush();
//			                    if (length < 1000) {
//									System.out.println(new String(data));
//								}


//						byte[] datas = new byte[is.read()];
//						is.read(datas); 
//		                BufferedImage image = ImageIO.read(new File("screenshot.jpg"));



//				        new ShowScreenShot(image).start();


//					try {
//						os.close();
//						is.close();
////		                fis.flush();
////		                fis.close();
//					} catch (IOException e2) {
//						e2.printStackTrace();
//					}
http://cngump.com/golang,/rpc/2015/03/22/grpc/
http://www.itdadao.com/articles/c15a244675p0.html
http://www.grpc.io/docs/quickstart/go.html#download-the-example
http://www.grpc.io/docs/quickstart/go.html#try-it
https://docs.docker.com/engine/installation/linux/centos/


devstack安装
以下操作使用root用户执行
1）先下载创建用户的脚本，stack用户的home目录要在/opt/stack，
git clone https://github.com/openstack-dev/devstack ~/devstack -b stable/mitaka
2）安装依赖包redhat-lsb-core
3）~/devstack/tools/create-stack-user.sh 
4）rm -rf ~/devstack
5）安装openvswitch
yum -y install openssl-devel
yum groupinstall "Development Tools"
获得源码 wget http://openvswitch.org/releases/openvswitch-2.3.1.tar.gz
解压 tar xfz openvswitch-2.3.1.tar.gz
编译文件目录 mkdir -p ~/rpmbuild/SOURCES
复制文件 cp openvswitch-2.3.1.tar.gz ~/rpmbuild/SOURCES
从spec文件中删除openvswitch-kmod的依赖包，并创建一个新的spec文件（以下是一句）
sed 's/openvswitch-kmod, //g' openvswitch-2.3.1/rhel/openvswitch.spec >openvswitch-2.3.1/rhel/openvswitch_no_kmod.spec
开始编译：rpmbuild -bb --without=check ./openvswitch-2.3.1/rhel/openvswitch_no_kmod.spec
安装编译生成的rpm文件：
yum localinstall /root/rpmbuild/RPMS/x86_64/openvswitch-2.3.1-1.x86_64.rpm
启动服务：systemctl start openvswitch.service



1)su stack
cd ~
2) 配置pip的源
cat > /tmp/pip.conf << _PIP_CONF_USE_RND_MIRRORS_
[global]
index-url=https://pypi.tuna.tsinghua.edu.cn/simple/
trusted-host=pypi.tuna.tsinghua.edu.cn
_PIP_CONF_USE_RND_MIRRORS_

cat > /tmp/.pydistutils.cfg << _EASY_INSTALL_CONF_USE_RND_MIRRORS_
[easy_install]
index-url=https://pypi.tuna.tsinghua.edu.cn/simple/
_EASY_INSTALL_CONF_USE_RND_MIRRORS_

sudo cp /tmp/.pydistutils.cfg /root/.pydistutils.cfg
cp /tmp/.pydistutils.cfg ~/.pydistutils.cfg
sudo mkdir -p /root/.pip
sudo cp /tmp/pip.conf /root/.pip/pip.conf
mkdir -p ~/.pip
cp /tmp/pip.conf ~/.pip/pip.conf

sudo yum update -y



git clone https://github.com/openstack-dev/devstack ~/devstack -b stable/mitaka
git clone https://github.com/openstack/python-magnumclient ~/python-magnumclient -b stable/mitaka
git clone https://github.com/openstack/python-barbicanclient ~/python-barbicanclient -b stable/mitaka

4） 配置devstack
cat > ~/devstack/localrc << END
DATABASE_PASSWORD=root
RABBIT_PASSWORD=roo
SERVICE_TOKEN=roo
SERVICE_PASSWORD=roo
ADMIN_PASSWORD=roo

# Do not use Nova-Network
disable_service n-net
# Enable Neutron
ENABLED_SERVICES+=,q-svc,q-dhcp,q-meta,q-agt,q-l3,q-lbaas,neutron,q-vpn,q-fwaas,cinder,c-vol

PUBLIC_INTERFACE=p4p1
GIT_BASE=${GIT_BASE:-https://github.com}
VOLUME_BACKING_FILE_SIZE=100G
HOST_IP=103.30.0.125
END

5） 下载get-pip.py  
wget https://bootstrap.pypa.io/get-pip.py -O ~/devstack/files/get-pip.py

6） 开始安装
cd ~/devstack
./stack.sh
